<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TimeSeries on Dustin Nguyen</title>
    <link>https://dustindnguyen.github.io/blog/timeseries/</link>
    <description>Recent content in TimeSeries on Dustin Nguyen</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2025, Dustin Nguyen.</copyright>
    <lastBuildDate>Sat, 01 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://dustindnguyen.github.io/blog/timeseries/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Controlled Neural ODE</title>
      <link>https://dustindnguyen.github.io/controlled-neural-ode/</link>
      <pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://dustindnguyen.github.io/controlled-neural-ode/</guid>
      <description>&lt;p&gt;In this &lt;a href=&#34;https://github.com/dustindnguyen/2024_Neural_ODE_Forced_Harmonic_Oscillator&#34;&gt;repo&lt;/a&gt; I showcase a simple application of Controlled Neural ODEs as a surrogate model of a physical system. In this case, it is the Forced-and-Damped Simple Harmonic Oscillator.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;A brief recap on Neural ODEs&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;p&gt;A Controlled ODE describes the rate of change of a state (vector) as:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;dy = f(y, t, u) \ dt&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;where $f(y, t, u)$ is a function that takes in state $y$, time $t$, and non-state variables $u$. In this case, $u$ are external controls. A Neural ODE replaces analytic function $f$ with a neural network $f_{NN}$ either partially, or entirely. The motivation for replacing some or all of existing analytic functions is: 1. The analytical function is computationally expensive (e.g., requires integrals or is very detailed), or 2. The analytic function is not known and can be learned from the data.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
